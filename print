#!/usr/bin/env bash

C_BlACK=0;
C_RED=1;
C_GREEN=2;
C_YELLOW=3;
C_BLUE=4;
C_MAGENTA=5;
C_CYAN=6;
C_GRAY=7;

# Colors a string ($1) with a number ($2)
__c() { printf "%s" "$(tput setaf ${2:-7})${1}$(tput sgr0)"; }

color_black() { printf "`__c "$1" 0`"; }
color_red() { printf "`__c "$1" 1`"; }
color_green() { printf "`__c "$1" 2`"; }
color_yellow() { printf "`__c "$1" 3`"; }
color_blue() { printf "`__c "$1" 4`"; }
color_magenta() { printf "`__c "$1" 5`"; }
color_cyan() { printf "`__c "$1" 6`"; }
color_gray() { printf "`__c "$1" 7`"; }

print_error() { printf "`color_red "e:"` $@\n"; }
print_info() { printf "`color_blue "i:"` $@\n"; }
print_ok() { printf "`color_green "k:"` $@\n"; }
print_warning() { printf "`color_yellow "w:"` $@\n"; }

# Prints a string with a light black foreground.
print_cmd() { 
  # awk $1=$1 removes extra spaces
  printf "\033[1;30m$ %s\n" "`echo "$@" | awk '$1=$1'`$(tput sgr0)"; 
}

question() {
  # https://stackoverflow.com/a/3232082/1054579
  read -r -p "`color_magenta q:` $1 [y/`color_cyan N`] " __response;
  [[ "$__response" =~ ^([yY][eE][sS]|[yY])$ ]] && return 0;
  return 1;
}
